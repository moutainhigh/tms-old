<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
 							http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">
	<bean id="messageProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>
                <value>classpath:test.properties</value>  
            </list>  
        </property>  
    </bean>
    <!-- 扫描service -->
	<context:component-scan base-package="org.nw"
		annotation-config="true" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>    
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">  
            <value>${dataSource.driverClass}</value>  
        </property>
        <property name="url">  
            <value>${dataSource.url}</value>  
        </property>
        <property name="username">  
            <value>${dataSource.username}</value>  
        </property>
        <property name="password">  
            <value>${dataSource.password}</value>  
        </property>
        <property name="minIdle">  
            <value>${dataSource.minIdle}</value>  
        </property>
        <property name="maxIdle">  
            <value>${dataSource.maxIdle}</value>  
        </property>
        <property name="initialSize">  
            <value>${dataSource.initialSize}</value>  
        </property>
        <property name="defaultAutoCommit">
        	<value>false</value>
        </property>
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"/>	
		
	<!-- 平台使用拦截式事务，产品使用声明式事务 -->
	<!-- 使用声明式事务在方法中设置@Transactional,使用proxy-target-class="true"表示作用在class，不是是class继承的接口 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	
	<!-- 使用拦截式事务 -->
	<aop:config>
        <aop:advisor pointcut="execution(* org..service..*Service.*(..))" advice-ref="txAdvice"/>
        <aop:advisor pointcut="execution(* com..service..*Service.*(..))" advice-ref="txAdvice"/>
    </aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
			<tx:method name="save*"  propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="edit*"  propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="add*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="batch*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="confirm*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="unconfirm*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="vent*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="unvent*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="do*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="upload*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="build*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" propagation="NOT_SUPPORTED" />
        </tx:attributes>
    </tx:advice>
 	<!-- 上下文持有器 -->
    <bean class="org.nw.web.utils.SpringContextHolder" lazy-init="false" />
    
    <!-- 定时任务配置 -->
  	<!--<bean id="saveAndUpdateOrganInfoAddJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean id="saveAndUpdateOrganInfoAddJob"
				class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="organInfoService"></property>
				<property name="targetMethod" value="saveAndUpdateOrganInfoAdd"/>
			</bean>
		</property>
		 run every morning at 1:30 AM  add by yekairush 2008.09.05PM
        <property name="cronExpression" value="0 30 1 * * ?"/>
		 run every 1 minute 
    	<property name="cronExpression" value="0 0/2 * * * ?"/>
	</bean>
	
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">
		<property name="triggers">
			<list>
				<ref bean="saveAndUpdateOrganInfoAddJobTrigger" />
			</list>
		</property>
	</bean>-->
</beans>
