/***************************************************************
 * \
 * The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity. *
 * \
 ***************************************************************/
package org.nw.jf.vo;

import org.nw.vo.pub.SuperVO;
import org.nw.vo.pub.lang.UFBoolean;
import org.nw.vo.pub.lang.UFDateTime;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 * 在此处添加此类的描述信息
 * </p>
 * 创建日期:2010-12-01 19:24:17
 * 
 * @author xuqc
 * @version NCPrj 1.0
 */
public class QueryConditionVO extends SuperVO {
	private static final long serialVersionUID = 8545507374891421683L;
	private String pk_corp;
	private UFDateTime ts;
	private UFBoolean if_used;
	private UFBoolean if_autocheck;
	private UFBoolean if_default;
	private UFBoolean if_desc;
	private String instrumentsql;
	private String field_code;
	private UFBoolean if_must;
	private UFBoolean userdefflag;
	private UFBoolean if_order;
	private UFBoolean if_datapower;
	private String table_code;
	private String opera_name;
	private String value;
	private String consult_code;
	private String guideline;
	private Integer max_length;
	private Integer return_type;
	private String pk_templet;
	private Integer disp_sequence;
	private String disp_value;
	private UFBoolean if_immobility;
	private Integer data_type;
	private String table_name;
	private UFBoolean iscondition;
	private String opera_code;
	private String field_name;
	private UFBoolean if_group;
	private String resid;
	private Integer dr;
	private String prerestrict;
	private Integer order_sequence;
	private Integer disp_type;
	private UFBoolean if_sum;
	private String id;

	/**
	 * 当是参照时，用于存储参照的关键字
	 */
	private String idcolname;
	private String show_value;// 参照字段的默认值

	public static final String PK_CORP = "pk_corp";
	public static final String IF_USED = "if_used";
	public static final String IF_AUTOCHECK = "if_autocheck";
	public static final String IF_DEFAULT = "if_default";
	public static final String IF_DESC = "if_desc";
	public static final String INSTRUMENTSQL = "instrumentsql";
	public static final String FIELD_CODE = "field_code";
	public static final String IF_MUST = "if_must";
	public static final String USERDEFFLAG = "userdefflag";
	public static final String IF_ORDER = "if_order";
	public static final String IF_DATAPOWER = "if_datapower";
	public static final String TABLE_CODE = "table_code";
	public static final String OPERA_NAME = "opera_name";
	public static final String VALUE = "value";
	public static final String CONSULT_CODE = "consult_code";
	public static final String GUIDELINE = "guideline";
	public static final String MAX_LENGTH = "max_length";
	public static final String RETURN_TYPE = "return_type";
	public static final String PK_TEMPLET = "pk_templet";
	public static final String DISP_SEQUENCE = "disp_sequence";
	public static final String DISP_VALUE = "disp_value";
	public static final String IF_IMMOBILITY = "if_immobility";
	public static final String DATA_TYPE = "data_type";
	public static final String TABLE_NAME = "table_name";
	public static final String ISCONDITION = "iscondition";
	public static final String OPERA_CODE = "opera_code";
	public static final String FIELD_NAME = "field_name";
	public static final String IF_GROUP = "if_group";
	public static final String RESID = "resid";
	public static final String PRERESTRICT = "prerestrict";
	public static final String ORDER_SEQUENCE = "order_sequence";
	public static final String DISP_TYPE = "disp_type";
	public static final String IF_SUM = "if_sum";
	public static final String ID = "id";

	public String getShow_value() {
		return show_value;
	}

	public void setShow_value(String show_value) {
		this.show_value = show_value;
	}

	/**
	 * 属性pk_corp的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getPk_corp() {
		return pk_corp;
	}

	/**
	 * 属性pk_corp的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newPk_corp
	 *            String
	 */
	public void setPk_corp(String newPk_corp) {
		this.pk_corp = newPk_corp;
	}

	/**
	 * 属性ts的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFDateTime
	 */
	public UFDateTime getTs() {
		return ts;
	}

	/**
	 * 属性ts的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newTs
	 *            UFDateTime
	 */
	public void setTs(UFDateTime newTs) {
		this.ts = newTs;
	}

	/**
	 * 属性if_used的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_used() {
		return if_used;
	}

	/**
	 * 属性if_used的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_used
	 *            UFBoolean
	 */
	public void setIf_used(UFBoolean newIf_used) {
		this.if_used = newIf_used;
	}

	/**
	 * 属性if_autocheck的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_autocheck() {
		return if_autocheck;
	}

	/**
	 * 属性if_autocheck的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_autocheck
	 *            UFBoolean
	 */
	public void setIf_autocheck(UFBoolean newIf_autocheck) {
		this.if_autocheck = newIf_autocheck;
	}

	/**
	 * 属性if_default的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_default() {
		return if_default;
	}

	/**
	 * 属性if_default的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_default
	 *            UFBoolean
	 */
	public void setIf_default(UFBoolean newIf_default) {
		this.if_default = newIf_default;
	}

	/**
	 * 属性if_desc的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_desc() {
		return if_desc;
	}

	/**
	 * 属性if_desc的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_desc
	 *            UFBoolean
	 */
	public void setIf_desc(UFBoolean newIf_desc) {
		this.if_desc = newIf_desc;
	}

	/**
	 * 属性instrumentsql的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getInstrumentsql() {
		return instrumentsql;
	}

	/**
	 * 属性instrumentsql的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newInstrumentsql
	 *            String
	 */
	public void setInstrumentsql(String newInstrumentsql) {
		this.instrumentsql = newInstrumentsql;
	}

	/**
	 * 属性field_code的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getField_code() {
		return field_code;
	}

	/**
	 * 属性field_code的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newField_code
	 *            String
	 */
	public void setField_code(String newField_code) {
		this.field_code = newField_code;
	}

	/**
	 * 属性if_must的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_must() {
		return if_must;
	}

	/**
	 * 属性if_must的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_must
	 *            UFBoolean
	 */
	public void setIf_must(UFBoolean newIf_must) {
		this.if_must = newIf_must;
	}

	/**
	 * 属性userdefflag的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getUserdefflag() {
		return userdefflag;
	}

	/**
	 * 属性userdefflag的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newUserdefflag
	 *            UFBoolean
	 */
	public void setUserdefflag(UFBoolean newUserdefflag) {
		this.userdefflag = newUserdefflag;
	}

	/**
	 * 属性if_order的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_order() {
		return if_order;
	}

	/**
	 * 属性if_order的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_order
	 *            UFBoolean
	 */
	public void setIf_order(UFBoolean newIf_order) {
		this.if_order = newIf_order;
	}

	/**
	 * 属性if_datapower的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_datapower() {
		return if_datapower;
	}

	/**
	 * 属性if_datapower的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_datapower
	 *            UFBoolean
	 */
	public void setIf_datapower(UFBoolean newIf_datapower) {
		this.if_datapower = newIf_datapower;
	}

	/**
	 * 属性table_code的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getTable_code() {
		return table_code;
	}

	/**
	 * 属性table_code的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newTable_code
	 *            String
	 */
	public void setTable_code(String newTable_code) {
		this.table_code = newTable_code;
	}

	/**
	 * 属性opera_name的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getOpera_name() {
		return opera_name;
	}

	/**
	 * 属性opera_name的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newOpera_name
	 *            String
	 */
	public void setOpera_name(String newOpera_name) {
		this.opera_name = newOpera_name;
	}

	/**
	 * 属性value的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getValue() {
		return value;
	}

	/**
	 * 属性value的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newValue
	 *            String
	 */
	public void setValue(String newValue) {
		this.value = newValue;
	}

	/**
	 * 属性consult_code的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getConsult_code() {
		return consult_code;
	}

	/**
	 * 属性consult_code的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newConsult_code
	 *            String
	 */
	public void setConsult_code(String newConsult_code) {
		this.consult_code = newConsult_code;
	}

	/**
	 * 属性guideline的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getGuideline() {
		return guideline;
	}

	/**
	 * 属性guideline的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newGuideline
	 *            String
	 */
	public void setGuideline(String newGuideline) {
		this.guideline = newGuideline;
	}

	/**
	 * 属性max_length的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getMax_length() {
		return max_length;
	}

	/**
	 * 属性max_length的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newMax_length
	 *            Integer
	 */
	public void setMax_length(Integer newMax_length) {
		this.max_length = newMax_length;
	}

	/**
	 * 属性return_type的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getReturn_type() {
		return return_type;
	}

	/**
	 * 属性return_type的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newReturn_type
	 *            Integer
	 */
	public void setReturn_type(Integer newReturn_type) {
		this.return_type = newReturn_type;
	}

	/**
	 * 属性pk_templet的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getPk_templet() {
		return pk_templet;
	}

	/**
	 * 属性pk_templet的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newPk_templet
	 *            String
	 */
	public void setPk_templet(String newPk_templet) {
		this.pk_templet = newPk_templet;
	}

	/**
	 * 属性disp_sequence的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getDisp_sequence() {
		return disp_sequence;
	}

	/**
	 * 属性disp_sequence的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newDisp_sequence
	 *            Integer
	 */
	public void setDisp_sequence(Integer newDisp_sequence) {
		this.disp_sequence = newDisp_sequence;
	}

	/**
	 * 属性disp_value的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getDisp_value() {
		return disp_value;
	}

	/**
	 * 属性disp_value的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newDisp_value
	 *            String
	 */
	public void setDisp_value(String newDisp_value) {
		this.disp_value = newDisp_value;
	}

	/**
	 * 属性if_immobility的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_immobility() {
		return if_immobility;
	}

	/**
	 * 属性if_immobility的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_immobility
	 *            UFBoolean
	 */
	public void setIf_immobility(UFBoolean newIf_immobility) {
		this.if_immobility = newIf_immobility;
	}

	/**
	 * 属性data_type的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getData_type() {
		return data_type;
	}

	/**
	 * 属性data_type的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newData_type
	 *            Integer
	 */
	public void setData_type(Integer newData_type) {
		this.data_type = newData_type;
	}

	/**
	 * 属性table_name的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getTable_name() {
		return table_name;
	}

	/**
	 * 属性table_name的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newTable_name
	 *            String
	 */
	public void setTable_name(String newTable_name) {
		this.table_name = newTable_name;
	}

	/**
	 * 属性iscondition的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIscondition() {
		return iscondition;
	}

	/**
	 * 属性iscondition的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIscondition
	 *            UFBoolean
	 */
	public void setIscondition(UFBoolean newIscondition) {
		this.iscondition = newIscondition;
	}

	/**
	 * 属性opera_code的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getOpera_code() {
		return opera_code;
	}

	/**
	 * 属性opera_code的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newOpera_code
	 *            String
	 */
	public void setOpera_code(String newOpera_code) {
		this.opera_code = newOpera_code;
	}

	/**
	 * 属性field_name的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getField_name() {
		return field_name;
	}

	/**
	 * 属性field_name的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newField_name
	 *            String
	 */
	public void setField_name(String newField_name) {
		this.field_name = newField_name;
	}

	/**
	 * 属性if_group的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_group() {
		return if_group;
	}

	/**
	 * 属性if_group的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_group
	 *            UFBoolean
	 */
	public void setIf_group(UFBoolean newIf_group) {
		this.if_group = newIf_group;
	}

	/**
	 * 属性resid的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getResid() {
		return resid;
	}

	/**
	 * 属性resid的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newResid
	 *            String
	 */
	public void setResid(String newResid) {
		this.resid = newResid;
	}

	/**
	 * 属性dr的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getDr() {
		return dr;
	}

	/**
	 * 属性dr的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newDr
	 *            Integer
	 */
	public void setDr(Integer newDr) {
		this.dr = newDr;
	}

	/**
	 * 属性prerestrict的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getPrerestrict() {
		return prerestrict;
	}

	/**
	 * 属性prerestrict的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newPrerestrict
	 *            String
	 */
	public void setPrerestrict(String newPrerestrict) {
		this.prerestrict = newPrerestrict;
	}

	/**
	 * 属性order_sequence的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getOrder_sequence() {
		return order_sequence;
	}

	/**
	 * 属性order_sequence的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newOrder_sequence
	 *            Integer
	 */
	public void setOrder_sequence(Integer newOrder_sequence) {
		this.order_sequence = newOrder_sequence;
	}

	/**
	 * 属性disp_type的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return Integer
	 */
	public Integer getDisp_type() {
		return disp_type;
	}

	/**
	 * 属性disp_type的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newDisp_type
	 *            Integer
	 */
	public void setDisp_type(Integer newDisp_type) {
		this.disp_type = newDisp_type;
	}

	/**
	 * 属性if_sum的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return UFBoolean
	 */
	public UFBoolean getIf_sum() {
		return if_sum;
	}

	/**
	 * 属性if_sum的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newIf_sum
	 *            UFBoolean
	 */
	public void setIf_sum(UFBoolean newIf_sum) {
		this.if_sum = newIf_sum;
	}

	/**
	 * 属性id的Getter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @return String
	 */
	public String getId() {
		return id;
	}

	/**
	 * 属性id的Setter方法. 创建日期:2010-12-01 19:24:17
	 * 
	 * @param newId
	 *            String
	 */
	public void setId(String newId) {
		this.id = newId;
	}

	public String getIdcolname() {
		return idcolname;
	}

	public void setIdcolname(String idcolname) {
		this.idcolname = idcolname;
	}

	/**
	 * <p>
	 * 取得父VO主键字段.
	 * <p>
	 * 创建日期:2010-12-01 19:24:17
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getParentPKFieldName() {
		return "pk_templet";
	}

	/**
	 * <p>
	 * 取得表主键.
	 * <p>
	 * 创建日期:2010-12-01 19:24:17
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPKFieldName() {
		return "id";
	}

	/**
	 * <p>
	 * 返回表名称.
	 * <p>
	 * 创建日期:2010-12-01 19:24:17
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "nw_query_condition";
	}

	/**
	 * 按照默认方式创建构造子. 创建日期:2010-12-01 19:24:17
	 */
	public QueryConditionVO() {
		super();
	}
}
